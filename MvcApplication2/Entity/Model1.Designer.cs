//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace MvcApplication2.Entity
{
    #region Contexts

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MyDatabaseEntities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initializes a new MyDatabaseEntities object using the connection string found in the 'MyDatabaseEntities' section of the application configuration file.
        /// </summary>
        public MyDatabaseEntities()
            : base("name=MyDatabaseEntities", "MyDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new MyDatabaseEntities object.
        /// </summary>
        public MyDatabaseEntities(string connectionString)
            : base(connectionString, "MyDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new MyDatabaseEntities object.
        /// </summary>
        public MyDatabaseEntities(EntityConnection connection)
            : base(connection, "MyDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Book> Books
        {
            get
            {
                if ((_Books == null))
                {
                    _Books = base.CreateObjectSet<Book>("Books");
                }
                return _Books;
            }
        }
        private ObjectSet<Book> _Books;

        #endregion

        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Books EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBooks(Book book)
        {
            base.AddObject("Books", book);
        }

        #endregion

    }

    #endregion

    #region Entities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "MyDatabaseModel", Name = "Book")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Book : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Book object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Book CreateBook(global::System.Int32 id)
        {
            Book book = new Book();
            book.id = id;
            return book;
        }

        #endregion

        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String BookTitle
        {
            get
            {
                return _BookTitle;
            }
            set
            {
                OnBookTitleChanging(value);
                ReportPropertyChanging("BookTitle");
                _BookTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BookTitle");
                OnBookTitleChanged();
            }
        }
        private global::System.String _BookTitle;
        partial void OnBookTitleChanging(global::System.String value);
        partial void OnBookTitleChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String BookAuthor
        {
            get
            {
                return _BookAuthor;
            }
            set
            {
                OnBookAuthorChanging(value);
                ReportPropertyChanging("BookAuthor");
                _BookAuthor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BookAuthor");
                OnBookAuthorChanged();
            }
        }
        private global::System.String _BookAuthor;
        partial void OnBookAuthorChanging(global::System.String value);
        partial void OnBookAuthorChanged();

        #endregion



        public string author { get; set; }

        public string title { get; set; }
    }

    #endregion

    
}
